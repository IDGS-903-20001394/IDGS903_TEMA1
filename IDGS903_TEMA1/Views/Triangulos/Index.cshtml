@model IDGS903_TEMA1.Models.CalcTriangulos

@{
    ViewBag.Title = "Index";
}

<h2>Calculadora de triangulos en puntos</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ingresa los puntos</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.x1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.x1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.x1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.y1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.y1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.y1, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.x2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.x2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.x2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.y2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.y2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.y2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="col-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.x3, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.x3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.x3, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.y3, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.y3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.y3, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Calcular" class="btn btn-outline-primary" />
            </div>
        </div>
    </div>
}
@if (ViewBag.isCalculated)
{
<hr />
    <div>
    @if (Model.isTriangulo == true)
    {
         <h4>El triangulo es: @Html.DisplayFor(model => Model.nombreT)</h4>
         <h5>Su area es: @Html.DisplayFor(model => Model.area)</h5>
    }
    @if(Model.isTriangulo == false) { 
        <h4>No es un triangulo</h4>
     }
    </div>
}

